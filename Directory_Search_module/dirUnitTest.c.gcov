        -:    0:Source:/home/anthony/Documents/Classes/Cryptography/Directory_Search_module/dirUnitTest.c
        -:    0:Graph:./obj/dirUnitTest.gcno
        -:    0:Data:./obj/dirUnitTest.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <stdbool.h>
        -:    4:#include <unistd.h>
        -:    5:
        -:    6:#include "stack.h"
        -:    7:#include "dir_search.h"
        -:    8:
        -:    9:// Test driver for search, soak test
        -:   10:	
function main called 1 returned 100% blocks executed 93%
        1:   11:int main(void)
        -:   12:{
        1:   13:	itemS_t* file = NULL;
        1:   14:	STACK_t* myFiles = NULL;
        -:   15:  
        6:   16:  for(int i = 0; i < 5; i++)
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:   17:  {
        5:   18:    myFiles = search("../../../../../", true, false);
call    0 returned 100%
        5:   19:    if(myFiles != NULL) file = pop(myFiles);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
    #####:   20:    else file = NULL;
   150155:   21:    while(file != NULL)
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
        -:   22:    {
   150145:   23:      free(file->keyValue);
   150145:   24:      free(file);
   150145:   25:      file = pop(myFiles);
call    0 returned 100%
        -:   26:    }
        5:   27:    if(myFiles != NULL) free(myFiles);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   28:  }
        1:   29:	return 0;
        -:   30:}
